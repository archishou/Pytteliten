name: Pytteliten Github Jobs
run-name: ${{ github.actor }} is running jobs on Pytteliten
on: [push, pull_request]
jobs:
  pl_size_checker:
    runs-on: ubuntu-latest
    outputs:
      pl_size: ${{ steps.size.outputs.pl_size_var }}
    steps:
      - id: size
        uses: actions/checkout@v3
      - name: Get size of PL mini
        run: |
          PL_SIZE=$(bash build.sh)
          echo "hello $PL_SIZE"
          echo "pl_size_var=Hello" >> $GITHUB_OUTPUT
        shell: bash
  pl_update_badge:
    runs-on: ubuntu-latest
    needs: pl_size_checker
    steps:
      - run: echo ${{needs.pl_size_checker.outputs.pl_size}}
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
    steps:
      - id: step1
        uses: actions/checkout@v3
      - name: Get size of PL mini
        run: |
          echo "test=$(git -v)" >> $GITHUB_OUTPUT
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - run: echo ${{needs.job1.outputs.output1}}
  pl_verify_clang_format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Verify PL complies with clang-fomat
        uses: jidicula/clang-format-action@v4.11.0
        with:
          clang-format-version: '16'
  pl_verify_mini_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Verify PL mini builds
        run: make mini
        shell: bash
